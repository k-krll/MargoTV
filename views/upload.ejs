<!DOCTYPE html>
<html>
<head>
  <title>Загрузка видео - <%= appName %></title>
  <style>
    :root {
      --netflix-red: #E50914;
      --netflix-black: #141414;
      --netflix-dark: #181818;
    }

    body {
      font-family: 'Helvetica Neue', Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: var(--netflix-black);
      color: white;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .header {
      padding: 20px 4%;
      background: rgba(0,0,0,0.7);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .logo {
      color: var(--netflix-red);
      font-size: 2rem;
      font-weight: bold;
      text-decoration: none;
    }

    .main-content {
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 40px 20px;
    }

    .upload-form {
      background: var(--netflix-dark);
      padding: 40px;
      border-radius: 8px;
      width: 100%;
      max-width: 500px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.3);
    }

    .form-title {
      margin: 0 0 30px;
      font-size: 1.8rem;
      font-weight: 500;
    }

    .form-group {
      margin-bottom: 25px;
    }

    label {
      display: block;
      margin-bottom: 8px;
      font-size: 1rem;
      color: #ccc;
    }

    input[type="text"] {
      width: 100%;
      padding: 12px;
      border: 1px solid #333;
      border-radius: 4px;
      background: #222;
      color: white;
      font-size: 1rem;
      box-sizing: border-box;
    }

    input[type="file"] {
      width: 100%;
      padding: 12px;
      background: #222;
      border: 2px dashed #333;
      border-radius: 4px;
      color: #ccc;
      cursor: pointer;
    }

    input[type="file"]::-webkit-file-upload-button {
      background: var(--netflix-red);
      color: white;
      padding: 8px 16px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      margin-right: 10px;
    }

    button {
      background-color: var(--netflix-red);
      color: white;
      padding: 12px 24px;
      border: none;
      border-radius: 4px;
      font-size: 1.1rem;
      cursor: pointer;
      width: 100%;
      transition: background-color 0.2s;
    }

    button:hover {
      background-color: #f40612;
    }

    .back-link {
      display: inline-block;
      margin-top: 20px;
      color: #999;
      text-decoration: none;
      font-size: 0.9rem;
    }

    .back-link:hover {
      color: white;
    }

    textarea {
      width: 100%;
      padding: 12px;
      border: 1px solid #333;
      border-radius: 4px;
      background: #222;
      color: white;
      font-size: 1rem;
      box-sizing: border-box;
      resize: vertical;
    }

    .thumbnail-preview {
      margin-top: 10px;
      max-width: 200px;
      display: none;
    }

    .thumbnail-preview img {
      width: 100%;
      border-radius: 4px;
    }

    .progress-container {
      display: none;
      margin-top: 20px;
      padding: 20px;
      background: rgba(0,0,0,0.2);
      border-radius: 8px;
    }

    .progress-bar {
      height: 4px;
      background: var(--netflix-dark);
      border-radius: 4px;
      overflow: hidden;
    }

    .progress-fill {
      height: 100%;
      background: var(--netflix-red);
      width: 0%;
      transition: width 0.3s;
    }

    .progress-text {
      margin-top: 10px;
      text-align: center;
      font-size: 0.9rem;
      color: #999;
    }

    .cancel-upload {
      display: none;
      margin-top: 10px;
      background: transparent;
      border: 1px solid var(--netflix-red);
      color: var(--netflix-red);
    }

    .cancel-upload:hover {
      background: rgba(229, 9, 20, 0.1);
    }

    .quality-options {
      display: flex;
      gap: 15px;
      flex-wrap: wrap;
    }

    .quality-option {
      display: flex;
      align-items: center;
      gap: 5px;
      padding: 8px 12px;
      background: #333;
      border-radius: 4px;
      cursor: pointer;
    }

    .quality-option:hover {
      background: #444;
    }
  </style>
</head>
<body>
  <header class="header">
    <a href="/" class="logo"><%= appName %></a>
  </header>

  <main class="main-content">
    <div class="upload-form">
      <h1 class="form-title">Загрузка нового видео</h1>
      <form id="uploadForm" action="/upload" method="post" enctype="multipart/form-data">
        <div class="form-group">
          <label for="title">Название видео</label>
          <input type="text" id="title" name="title" required placeholder="Введите название видео">
        </div>
        <div class="form-group">
          <label for="description">Описание</label>
          <textarea id="description" name="description" rows="4" placeholder="Добавьте описание видео"></textarea>
        </div>
        <div class="form-group">
          <label for="thumbnail">Обложка видео</label>
          <input type="file" id="thumbnail" name="thumbnail" accept="image/*">
          <div class="thumbnail-preview"></div>
        </div>
        <div class="form-group">
          <label for="video">Выберите видео</label>
          <input type="file" id="video" name="video" accept="video/*" required>
        </div>
        <div class="form-group">
          <label>Качество видео</label>
          <div class="quality-options">
            <label class="quality-option">
              <input type="checkbox" name="qualities[]" value="240p"> 240p
            </label>
            <label class="quality-option">
              <input type="checkbox" name="qualities[]" value="360p"> 360p
            </label>
            <label class="quality-option">
              <input type="checkbox" name="qualities[]" value="480p"> 480p
            </label>
            <label class="quality-option">
              <input type="checkbox" name="qualities[]" value="720p" checked> 720p
            </label>
            <label class="quality-option">
              <input type="checkbox" name="qualities[]" value="1080p"> 1080p
            </label>
          </div>
        </div>
        <div class="progress-container" id="progressContainer">
          <div class="progress-bar">
            <div class="progress-fill" id="progressFill"></div>
          </div>
          <div class="progress-text" id="progressText">
            Подготовка к загрузке...
          </div>
          <button type="button" class="cancel-upload" id="cancelUpload">
            Отменить загрузку
          </button>
        </div>
        <button type="submit" id="submitButton">Загрузить</button>
        <a href="/" class="back-link">← Вернуться на главную</a>
      </form>
    </div>
  </main>

  <script>
  document.getElementById('thumbnail').addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      const preview = document.querySelector('.thumbnail-preview');
      
      reader.onload = function(e) {
        preview.style.display = 'block';
        preview.innerHTML = `<img src="${e.target.result}" alt="Preview">`;
      }
      
      reader.readAsDataURL(file);
    }
  });

  document.getElementById('uploadForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const form = e.target;
    const formData = new FormData(form);
    const submitButton = document.getElementById('submitButton');
    const progressContainer = document.getElementById('progressContainer');
    const progressFill = document.getElementById('progressFill');
    const progressText = document.getElementById('progressText');
    const cancelButton = document.getElementById('cancelUpload');
    
    // Проверяем размер файла
    const videoFile = formData.get('video');
    const fileSize = videoFile.size;
    const fileSizeMB = fileSize / (1024 * 1024);
    
    submitButton.disabled = true;
    progressContainer.style.display = 'block';
    cancelButton.style.display = 'block';
    
    try {
      const xhr = new XMLHttpRequest();
      let cancelled = false;
      
      cancelButton.onclick = () => {
        cancelled = true;
        xhr.abort();
        submitButton.disabled = false;
        progressContainer.style.display = 'none';
        progressText.textContent = 'Загрузка отменена';
      };
      
      xhr.upload.onprogress = (event) => {
        if (cancelled) return;
        
        const percent = (event.loaded / event.total) * 100;
        const uploaded = event.loaded / (1024 * 1024);
        const total = event.total / (1024 * 1024);
        
        progressFill.style.width = percent + '%';
        progressText.textContent = `Загружено ${uploaded.toFixed(1)} MB из ${total.toFixed(1)} MB (${percent.toFixed(1)}%)`;
      };
      
      xhr.onload = () => {
        if (xhr.status === 200) {
          window.location.href = '/';
        } else {
          progressText.textContent = 'Ошибка при загрузке';
          submitButton.disabled = false;
        }
      };
      
      xhr.onerror = () => {
        progressText.textContent = 'Ошибка сети';
        submitButton.disabled = false;
      };
      
      xhr.open('POST', '/upload', true);
      xhr.send(formData);
      
    } catch (error) {
      progressText.textContent = 'Произошла ошибка';
      submitButton.disabled = false;
    }
  });

  // Предварительный просмотр размера файла
  document.getElementById('video').addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      const sizeMB = file.size / (1024 * 1024);
      const progressText = document.getElementById('progressText');
      progressText.textContent = `Выбран файл размером ${sizeMB.toFixed(1)} MB`;
      document.getElementById('progressContainer').style.display = 'block';
    }
  });
  </script>
</body>
</html> 