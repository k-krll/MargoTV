<!DOCTYPE html>
<html>
<head>
  <title>Редактирование видео - <%= appName %></title>
  <style>
    :root {
      --netflix-red: #E50914;
      --netflix-black: #141414;
      --netflix-dark: #181818;
    }

    body {
      font-family: 'Helvetica Neue', Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: var(--netflix-black);
      color: white;
      min-height: 100vh;
    }

    .header {
      padding: 20px 4%;
      background: rgba(0,0,0,0.7);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .logo {
      color: var(--netflix-red);
      font-size: 2rem;
      font-weight: bold;
      text-decoration: none;
    }

    .main-content {
      max-width: 800px;
      margin: 40px auto;
      padding: 20px;
    }

    .edit-form {
      background: var(--netflix-dark);
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.3);
    }

    .form-group {
      margin-bottom: 20px;
    }

    label {
      display: block;
      margin-bottom: 8px;
      color: #ccc;
    }

    input[type="text"],
    textarea {
      width: 100%;
      padding: 12px;
      background: #333;
      border: 1px solid #444;
      border-radius: 4px;
      color: white;
      font-size: 1rem;
    }

    textarea {
      min-height: 100px;
      resize: vertical;
    }

    .current-thumbnail {
      margin: 10px 0;
      max-width: 200px;
      border-radius: 4px;
    }

    .button-group {
      display: flex;
      gap: 10px;
      margin-top: 20px;
    }

    .save-button {
      background: var(--netflix-red);
      color: white;
      padding: 12px 24px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      flex: 1;
    }

    .delete-button {
      background: transparent;
      color: var(--netflix-red);
      padding: 12px 24px;
      border: 1px solid var(--netflix-red);
      border-radius: 4px;
      cursor: pointer;
    }

    .save-button:hover {
      background: #f40612;
    }

    .delete-button:hover {
      background: rgba(229, 9, 20, 0.1);
    }

    .message {
      padding: 10px;
      margin: 10px 0;
      border-radius: 4px;
    }

    .success {
      background: rgba(40, 167, 69, 0.2);
      color: #28a745;
    }

    .error {
      background: rgba(229, 9, 20, 0.2);
      color: var(--netflix-red);
    }
  </style>
</head>
<body>
  <header class="header">
    <a href="/" class="logo"><%= appName %></a>
  </header>

  <main class="main-content">
    <div class="edit-form">
      <h1>Редактирование видео</h1>
      <form id="editForm">
        <div class="form-group">
          <label for="title">Название</label>
          <input type="text" id="title" name="title" value="<%= video.title %>" required>
        </div>

        <div class="form-group">
          <label for="description">Описание</label>
          <textarea id="description" name="description"><%= video.description %></textarea>
        </div>

        <div class="form-group">
          <label for="thumbnail">Превью</label>
          <% if (video.thumbnail) { %>
            <img src="/<%= video.thumbnail %>" alt="Текущее превью" class="current-thumbnail">
          <% } %>
          <input type="file" id="thumbnail" name="thumbnail" accept="image/*">
        </div>

        <div class="button-group">
          <button type="submit" class="save-button">Сохранить</button>
          <button type="button" class="delete-button" onclick="deleteVideo()">Удалить видео</button>
        </div>
      </form>
    </div>
  </main>

  <script>
    const videoId = '<%= video._id %>';
    const editForm = document.getElementById('editForm');

    editForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(editForm);
      
      try {
        const response = await fetch(`/api/videos/${videoId}`, {
          method: 'POST',
          body: formData
        });

        const data = await response.json();
        
        if (data.success) {
          window.location.href = '/';
        } else {
          showMessage('Ошибка при сохранении', 'error');
        }
      } catch (error) {
        showMessage('Ошибка при сохранении', 'error');
      }
    });

    async function deleteVideo() {
      if (!confirm('Вы уверены, что хотите удалить это видео?')) {
        return;
      }

      try {
        const response = await fetch(`/api/videos/${videoId}`, {
          method: 'DELETE'
        });

        const data = await response.json();
        
        if (data.success) {
          window.location.href = '/';
        } else {
          showMessage('Ошибка при удалении', 'error');
        }
      } catch (error) {
        showMessage('Ошибка при удалении', 'error');
      }
    }

    function showMessage(text, type) {
      const message = document.createElement('div');
      message.className = `message ${type}`;
      message.textContent = text;
      editForm.insertAdjacentElement('beforebegin', message);
      setTimeout(() => message.remove(), 3000);
    }
  </script>
</body>
</html> 